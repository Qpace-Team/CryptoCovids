{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Neo/WorkSpace/CryptoCovids Minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/Neo/WorkSpace/CryptoCovids Minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/Neo/WorkSpace/CryptoCovids Minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/Neo/WorkSpace/CryptoCovids Minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import Web3 from\"web3\";import contract from\"../contracts/contract.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialInfoState={connected:false,status:null,account:null,web3:null,contract:null,address:null,contractJSON:null};var initialMintState={loading:false,status:\"Connect your wallet and Mint your \".concat(contract.name),amount:1,supply:\"0\",cost:\"0\"};function Minter(){var _info$web;var _useState=useState(initialInfoState),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var _useState3=useState(initialMintState),_useState4=_slicedToArray(_useState3,2),mintInfo=_useState4[0],setMintInfo=_useState4[1];console.log(info);var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_request,_contractJSON){var accounts,networkId,web3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!window.ethereum.isMetaMask){_context.next=17;break;}_context.prev=1;_context.next=4;return window.ethereum.request({method:_request});case 4:accounts=_context.sent;_context.next=7;return window.ethereum.request({method:\"net_version\"});case 7:networkId=_context.sent;if(networkId==_contractJSON.chain_id){web3=new Web3(window.ethereum);setInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{connected:true,status:null,account:accounts[0],web3:web3,contract:new web3.eth.Contract(_contractJSON.abi,_contractJSON.address),contractJSON:_contractJSON});});}else{setInfo(function(){return _objectSpread(_objectSpread({},initialInfoState),{},{status:\"Change network to \".concat(_contractJSON.chain,\".\")});});}_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.log(_context.t0.message);setInfo(function(){return _objectSpread({},initialInfoState);});case 15:_context.next=18;break;case 17:setInfo(function(){return _objectSpread(_objectSpread({},initialInfoState),{},{status:\"Please install metamask.\"});});case 18:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function init(_x,_x2){return _ref.apply(this,arguments);};}();var initListeners=function initListeners(){if(window.ethereum){window.ethereum.on(\"accountsChanged\",function(){window.location.reload();});window.ethereum.on(\"chainChanged\",function(){window.location.reload();});}};var getSupply=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var params,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:params={to:info.contractJSON.address,from:info.account,data:info.contract.methods.totalSupply().encodeABI()};_context2.prev=1;_context2.next=4;return window.ethereum.request({method:\"eth_call\",params:[params]});case 4:result=_context2.sent;console.log(info.web3.utils.hexToNumberString(result));setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{supply:info.web3.utils.hexToNumberString(result)});});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{supply:0});});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function getSupply(){return _ref2.apply(this,arguments);};}();var getCost=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var params,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:params={to:info.contractJSON.address,from:info.account,data:info.contract.methods.cost().encodeABI()};_context3.prev=1;_context3.next=4;return window.ethereum.request({method:\"eth_call\",params:[params]});case 4:result=_context3.sent;console.log(info.web3.utils.hexToNumberString(result));setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{cost:info.web3.utils.hexToNumberString(result)});});_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{cost:\"0\"});});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,9]]);}));return function getCost(){return _ref3.apply(this,arguments);};}();var mint=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var params,txHash;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:params={to:info.contractJSON.address,from:info.account,value:String(info.web3.utils.toHex(Number(mintInfo.cost)*mintInfo.amount)),data:info.contract.methods.mint(info.account,mintInfo.amount).encodeABI()};_context4.prev=1;setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{loading:true,status:\"Minting \".concat(mintInfo.amount,\" CryptoCovid ...\")});});_context4.next=5;return window.ethereum.request({method:\"eth_sendTransaction\",params:[params]});case 5:txHash=_context4.sent;setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{loading:false,status:\"Great! Be patient, Your CryptoCovids will show up in our Gallery and marketplaces such as Opensea, once the transaction is successful. You can check your transaction on your MetaMask.\"});});getSupply();_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](1);setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{loading:false,status:_context4.t0.message});});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[1,10]]);}));return function mint(){return _ref4.apply(this,arguments);};}();var updateAmount=function updateAmount(newAmount){if(newAmount<=20&&newAmount>=1){setMintInfo(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{amount:newAmount});});}};var connectToContract=function connectToContract(_contractJSON){init(\"eth_requestAccounts\",_contractJSON);};useEffect(function(){connectToContract(contract);initListeners();},[]);useEffect(function(){if(info.connected){getSupply();getCost();}},[info.connected]);return/*#__PURE__*/_jsxs(\"div\",{className:\"card icon-box2\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"icon\",children:/*#__PURE__*/_jsx(\"i\",{class:\"bx bxl-creative-commons\"})}),mintInfo.supply<contract.total_supply?/*#__PURE__*/_jsxs(\"div\",{className:\"card_body\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"button\",{disabled:!info.connected||mintInfo.cost==\"0\",className:\"small_button btn btn-outline-dark\",onClick:function onClick(){return updateAmount(mintInfo.amount-1);},children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:10}}),/*#__PURE__*/_jsxs(\"button\",{disabled:!info.connected||mintInfo.cost==\"0\",className:\"button gap-6 col-10  btn btn-outline-primary\",onClick:function onClick(){return mint();},children:[\"Mint \",mintInfo.amount]}),/*#__PURE__*/_jsx(\"div\",{style:{width:10}}),/*#__PURE__*/_jsx(\"button\",{disabled:!info.connected||mintInfo.cost==\"0\",className:\"small_button btn btn-outline-dark\",onClick:function onClick(){return updateAmount(mintInfo.amount+1);},children:\"+\"})]}),info.connected?/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsxs(\"p\",{style:{color:\"var(--statusText)\",textAlign:\"center\"},children:[((_info$web=info.web3)===null||_info$web===void 0?void 0:_info$web.utils.fromWei(mintInfo.cost,\"ether\"))*mintInfo.amount,\" \",contract.chain_symbol]}),/*#__PURE__*/_jsx(\"div\",{style:{width:20}}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"var(--statusText)\",textAlign:\"center\"},children:\"|\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:20}}),/*#__PURE__*/_jsxs(\"p\",{style:{color:\"var(--statusText)\",textAlign:\"center\"},children:[mintInfo.supply,\"/\",contract.total_supply]})]}):null,mintInfo.status?/*#__PURE__*/_jsx(\"p\",{className:\"statusText\",children:mintInfo.status}):null,info.status?/*#__PURE__*/_jsx(\"p\",{className:\"statusText\",style:{color:\"var(--error)\"},children:info.status}):null]}):/*#__PURE__*/_jsxs(\"div\",{className:\"card_body\",children:[/*#__PURE__*/_jsxs(\"p\",{style:{color:\"var(--statusText)\",textAlign:\"center\"},children:[mintInfo.supply,\"/\",contract.total_supply]}),/*#__PURE__*/_jsxs(\"p\",{className:\"statusText\",children:[\"We've sold out! .You can still buy and trade the \",contract.name,\" \",\"on marketplaces such as \",/*#__PURE__*/_jsx(\"a\",{href:\"https://opensea.io\",children:\"Opensea\"}),\".\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card_footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button button gap-2 col-10  btn btn-btn-outline-danger disabled\",style:{backgroundColor:info.connected?\"var(--success)\":\"var(--warning)\"},onClick:function onClick(){return connectToContract(contract);},children:info.account?\"Connected\":\"Connect Wallet\"}),info.connected?/*#__PURE__*/_jsx(\"span\",{className:\"accountText\",children:String(info.account).substring(0,6)+\"...\"+String(info.account).substring(38)}):null]}),/*#__PURE__*/_jsx(\"a\",{style:{position:\"absolute\",bottom:55,left:-75},className:\"_90\",target:\"_blank\",href:\"https://rinkeby.etherscan.io/address/0x72c336b7170db42183c15629e0d9880e7d62bc42\",children:\"View Contract\"})]});}export default Minter;","map":{"version":3,"sources":["/Users/Neo/WorkSpace/CryptoCovids Minter/src/components/Minter.js"],"names":["useEffect","useState","Web3","contract","initialInfoState","connected","status","account","web3","address","contractJSON","initialMintState","loading","name","amount","supply","cost","Minter","info","setInfo","mintInfo","setMintInfo","console","log","init","_request","_contractJSON","window","ethereum","isMetaMask","request","method","accounts","networkId","chain_id","prevState","eth","Contract","abi","chain","message","initListeners","on","location","reload","getSupply","params","to","from","data","methods","totalSupply","encodeABI","result","utils","hexToNumberString","getCost","mint","value","String","toHex","Number","txHash","updateAmount","newAmount","connectToContract","total_supply","display","justifyContent","alignItems","width","color","textAlign","fromWei","chain_symbol","backgroundColor","substring","position","bottom","left"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contract from \"../contracts/contract.json\";\n\nconst initialInfoState = {\n  connected: false,\n  status: null,\n  account: null,\n  web3: null,\n  contract: null,\n  address: null,\n  contractJSON: null,\n};\n\nconst initialMintState = {\n  loading: false,\n  status: `Connect your wallet and Mint your ${contract.name}`,\n  amount: 1,\n  supply: \"0\",\n  cost: \"0\",\n};\n\n\nfunction Minter() {\n  const [info, setInfo] = useState(initialInfoState);\n  const [mintInfo, setMintInfo] = useState(initialMintState);\n\n  console.log(info);\n\n  const init = async (_request, _contractJSON) => {\n    if (window.ethereum.isMetaMask) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: _request,\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == _contractJSON.chain_id) {\n          let web3 = new Web3(window.ethereum);\n          setInfo((prevState) => ({\n            ...prevState,\n            connected: true,\n            status: null,\n            account: accounts[0],\n            web3: web3,\n            contract: new web3.eth.Contract(\n              _contractJSON.abi,\n              _contractJSON.address\n            ),\n            contractJSON: _contractJSON,\n          }));\n        } else {\n          setInfo(() => ({\n            ...initialInfoState,\n            status: `Change network to ${_contractJSON.chain}.`,\n          }));\n        }\n      } catch (err) {\n        console.log(err.message);\n        setInfo(() => ({\n          ...initialInfoState,\n        }));\n      }\n    } else {\n      setInfo(() => ({\n        ...initialInfoState,\n        status: \"Please install metamask.\",\n      }));\n    }\n  };\n\n  const initListeners = () => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const getSupply = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.totalSupply().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: 0,\n      }));\n    }\n  };\n\n  const getCost = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.cost().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: \"0\",\n      }));\n    }\n  };\n\n  const mint = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      value: String(\n        info.web3.utils.toHex(Number(mintInfo.cost) * mintInfo.amount)\n      ),\n      data: info.contract.methods\n        .mint(info.account, mintInfo.amount)\n        .encodeABI(),\n    };\n    try {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: true,\n        status: `Minting ${mintInfo.amount} CryptoCovid ...`,\n      }));\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [params],\n      });\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status:\n          \"Great! Be patient, Your CryptoCovids will show up in our Gallery and marketplaces such as Opensea, once the transaction is successful. You can check your transaction on your MetaMask.\",\n      }));\n      getSupply();\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status: err.message,\n      }));\n    }\n  };\n\n  const updateAmount = (newAmount) => {\n    if (newAmount <= 20 && newAmount >= 1) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        amount: newAmount,\n      }));\n    }\n  };\n\n  const connectToContract = (_contractJSON) => {\n    init(\"eth_requestAccounts\", _contractJSON);\n  };\n\n  useEffect(() => {\n    connectToContract(contract);\n    initListeners();\n  }, []);\n\n  useEffect(() => {\n    if (info.connected) {\n      getSupply();\n      getCost();\n    }\n  }, [info.connected]);\n\n  return (\n      <div className=\"card icon-box2\">\n          <div class=\"icon\"><i class=\"bx bxl-creative-commons\"></i></div>\n        {mintInfo.supply < contract.total_supply ? (\n          <div className=\"card_body\">\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button btn btn-outline-dark\"\n                onClick={() => updateAmount(mintInfo.amount - 1)}\n              >\n                -\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"button gap-6 col-10  btn btn-outline-primary\"\n                onClick={() => mint()}\n              >\n                Mint {mintInfo.amount}\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button btn btn-outline-dark\"\n                onClick={() => updateAmount(mintInfo.amount + 1)}\n              >\n                +\n              </button>\n            </div>\n            {info.connected ? (\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {info.web3?.utils.fromWei(mintInfo.cost, \"ether\") *\n                    mintInfo.amount}{\" \"}\n                  {contract.chain_symbol}\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  |\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {mintInfo.supply}/{contract.total_supply}\n                </p>\n              </div>\n            ) : null}\n            {mintInfo.status ? (\n              <p className=\"statusText\">{mintInfo.status}</p>\n            ) : null}\n            {info.status ? (\n              <p className=\"statusText\" style={{ color: \"var(--error)\" }}>\n                {info.status}\n              </p>\n            ) : null}\n          </div>\n        ) : (\n          <div className=\"card_body\">\n            <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n              {mintInfo.supply}/{contract.total_supply}\n            </p>\n            <p className=\"statusText\">\n              We've sold out! .You can still buy and trade the {contract.name}{\" \"}\n              on marketplaces such as <a href=\"https://opensea.io\">Opensea</a>.\n            </p>\n          </div>\n        )}\n        <div className=\"card_footer\">\n          <button\n            className=\"button button gap-2 col-10  btn btn-btn-outline-danger disabled\"\n            style={{\n              backgroundColor: info.connected\n                ? \"var(--success)\"\n                : \"var(--warning)\",\n            }}\n            onClick={() => connectToContract(contract)}\n          >\n            {info.account ? \"Connected\" : \"Connect Wallet\"}\n          </button>\n          {info.connected ? (\n            <span className=\"accountText\">\n              {String(info.account).substring(0, 6) +\n                \"...\" +\n                String(info.account).substring(38)}\n            </span>\n          ) : null}\n        </div>\n        <a\n          style={{\n            position: \"absolute\",\n            bottom: 55,\n            left: -75,\n          }}\n          className=\"_90\"\n          target=\"_blank\"\n          href=\"https://rinkeby.etherscan.io/address/0x72c336b7170db42183c15629e0d9880e7d62bc42\"\n        >\n          View Contract\n        </a>\n      </div>\n  );\n}\n\nexport default Minter;\n"]},"metadata":{},"sourceType":"module"}