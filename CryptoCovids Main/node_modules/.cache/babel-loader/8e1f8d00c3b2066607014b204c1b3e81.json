{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/WorkSpace/CryptoCovids Minter/src/components/Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contract from \"../contracts/contract.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialInfoState = {\n  connected: false,\n  status: null,\n  account: null,\n  web3: null,\n  contract: null,\n  address: null,\n  contractJSON: null\n};\nconst initialMintState = {\n  loading: false,\n  status: `Connect your wallet and Mint your ${contract.name}`,\n  amount: 1,\n  supply: \"0\",\n  cost: \"0\"\n};\ndocument.getElementById(\"minted\").innerHTML = contract.total_supply;\n\nfunction Minter() {\n  _s();\n\n  var _info$web;\n\n  const [info, setInfo] = useState(initialInfoState);\n  const [mintInfo, setMintInfo] = useState(initialMintState);\n  console.log(info);\n\n  const init = async (_request, _contractJSON) => {\n    if (window.ethereum.isMetaMask) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: _request\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n\n        if (networkId == _contractJSON.chain_id) {\n          let web3 = new Web3(window.ethereum);\n          setInfo(prevState => ({ ...prevState,\n            connected: true,\n            status: null,\n            account: accounts[0],\n            web3: web3,\n            contract: new web3.eth.Contract(_contractJSON.abi, _contractJSON.address),\n            contractJSON: _contractJSON\n          }));\n        } else {\n          setInfo(() => ({ ...initialInfoState,\n            status: `Change network to ${_contractJSON.chain}.`\n          }));\n        }\n      } catch (err) {\n        console.log(err.message);\n        setInfo(() => ({ ...initialInfoState\n        }));\n      }\n    } else {\n      setInfo(() => ({ ...initialInfoState,\n        status: \"Please install metamask.\"\n      }));\n    }\n  };\n\n  const initListeners = () => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const getSupply = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.totalSupply().encodeABI()\n    };\n\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params]\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo(prevState => ({ ...prevState,\n        supply: info.web3.utils.hexToNumberString(result)\n      }));\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        supply: 0\n      }));\n    }\n  };\n\n  const getCost = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.cost().encodeABI()\n    };\n\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params]\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo(prevState => ({ ...prevState,\n        cost: info.web3.utils.hexToNumberString(result)\n      }));\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        cost: \"0\"\n      }));\n    }\n  };\n\n  const mint = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      value: String(info.web3.utils.toHex(Number(mintInfo.cost) * mintInfo.amount)),\n      data: info.contract.methods.mint(info.account, mintInfo.amount).encodeABI()\n    };\n\n    try {\n      setMintInfo(prevState => ({ ...prevState,\n        loading: true,\n        status: `Minting ${mintInfo.amount} CryptoCovid ...`\n      }));\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [params]\n      });\n      setMintInfo(prevState => ({ ...prevState,\n        loading: false,\n        status: \"Great! Be patient, Your CryptoCovids will show up in our Gallery and marketplaces such as Opensea, once the transaction is successful. You can check your transaction on your MetaMask.\"\n      }));\n      getSupply();\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        loading: false,\n        status: err.message\n      }));\n    }\n  };\n\n  const updateAmount = newAmount => {\n    if (newAmount <= 20 && newAmount >= 1) {\n      setMintInfo(prevState => ({ ...prevState,\n        amount: newAmount\n      }));\n    }\n  };\n\n  const connectToContract = _contractJSON => {\n    init(\"eth_requestAccounts\", _contractJSON);\n  };\n\n  useEffect(() => {\n    connectToContract(contract);\n    initListeners();\n  }, []);\n  useEffect(() => {\n    if (info.connected) {\n      getSupply();\n      getCost();\n    }\n  }, [info.connected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card icon-box2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bx bxl-creative-commons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this), mintInfo.supply < contract.total_supply ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !info.connected || mintInfo.cost == \"0\",\n          className: \"small_button btn btn-outline-dark\",\n          onClick: () => updateAmount(mintInfo.amount - 1),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !info.connected || mintInfo.cost == \"0\",\n          className: \"button gap-6 col-10  btn btn-outline-primary\",\n          onClick: () => mint(),\n          children: [\"Mint \", mintInfo.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !info.connected || mintInfo.cost == \"0\",\n          className: \"small_button btn btn-outline-dark\",\n          onClick: () => updateAmount(mintInfo.amount + 1),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), info.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"var(--statusText)\",\n            textAlign: \"center\"\n          },\n          children: [((_info$web = info.web3) === null || _info$web === void 0 ? void 0 : _info$web.utils.fromWei(mintInfo.cost, \"ether\")) * mintInfo.amount, \" \", contract.chain_symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"var(--statusText)\",\n            textAlign: \"center\"\n          },\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"var(--statusText)\",\n            textAlign: \"center\"\n          },\n          children: [mintInfo.supply, \"/\", contract.total_supply]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }, this) : null, mintInfo.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statusText\",\n        children: mintInfo.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }, this) : null, info.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statusText\",\n        style: {\n          color: \"var(--error)\"\n        },\n        children: info.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"var(--statusText)\",\n          textAlign: \"center\"\n        },\n        children: [mintInfo.supply, \"/\", contract.total_supply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statusText\",\n        children: [\"We've sold out! .You can still buy and trade the \", contract.name, \" \", \"on marketplaces such as \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://opensea.io\",\n          children: \"Opensea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 39\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button gap-2 col-10  btn btn-btn-outline-danger\",\n        style: {\n          backgroundColor: info.connected ? \"var(--success)\" : \"var(--warning)\"\n        },\n        onClick: () => connectToContract(contract),\n        children: info.account ? \"Connected\" : \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), info.connected ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"accountText\",\n        children: String(info.account).substring(0, 6) + \"...\" + String(info.account).substring(38)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        position: \"absolute\",\n        bottom: 55,\n        left: -75\n      },\n      className: \"_90\",\n      target: \"_blank\",\n      href: \"https://rinkeby.etherscan.io/address/0x72c336b7170db42183c15629e0d9880e7d62bc42\",\n      children: \"View Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Minter, \"mIzeChdqMe5EBrlIjA8UhRd3cSE=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["/Users/Neo/WorkSpace/CryptoCovids Minter/src/components/Minter.js"],"names":["useEffect","useState","Web3","contract","initialInfoState","connected","status","account","web3","address","contractJSON","initialMintState","loading","name","amount","supply","cost","document","getElementById","innerHTML","total_supply","Minter","info","setInfo","mintInfo","setMintInfo","console","log","init","_request","_contractJSON","window","ethereum","isMetaMask","accounts","request","method","networkId","chain_id","prevState","eth","Contract","abi","chain","err","message","initListeners","on","location","reload","getSupply","params","to","from","data","methods","totalSupply","encodeABI","result","utils","hexToNumberString","getCost","mint","value","String","toHex","Number","txHash","updateAmount","newAmount","connectToContract","display","justifyContent","alignItems","width","color","textAlign","fromWei","chain_symbol","backgroundColor","substring","position","bottom","left"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,MAAM,EAAE,IAFe;AAGvBC,EAAAA,OAAO,EAAE,IAHc;AAIvBC,EAAAA,IAAI,EAAE,IAJiB;AAKvBL,EAAAA,QAAQ,EAAE,IALa;AAMvBM,EAAAA,OAAO,EAAE,IANc;AAOvBC,EAAAA,YAAY,EAAE;AAPS,CAAzB;AAUA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,KADc;AAEvBN,EAAAA,MAAM,EAAG,qCAAoCH,QAAQ,CAACU,IAAK,EAFpC;AAGvBC,EAAAA,MAAM,EAAE,CAHe;AAIvBC,EAAAA,MAAM,EAAE,GAJe;AAKvBC,EAAAA,IAAI,EAAE;AALiB,CAAzB;AAQAC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8ChB,QAAQ,CAACiB,YAAvD;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAACG,gBAAD,CAAhC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAACU,gBAAD,CAAxC;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,QAAMM,IAAI,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAC9C,QAAIC,MAAM,CAACC,QAAP,CAAgBC,UAApB,EAAgC;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC7CC,UAAAA,MAAM,EAAEP;AADqC,SAAxB,CAAvB;AAGA,cAAMQ,SAAS,GAAG,MAAMN,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC9CC,UAAAA,MAAM,EAAE;AADsC,SAAxB,CAAxB;;AAGA,YAAIC,SAAS,IAAIP,aAAa,CAACQ,QAA/B,EAAyC;AACvC,cAAI9B,IAAI,GAAG,IAAIN,IAAJ,CAAS6B,MAAM,CAACC,QAAhB,CAAX;AACAT,UAAAA,OAAO,CAAEgB,SAAD,KAAgB,EACtB,GAAGA,SADmB;AAEtBlC,YAAAA,SAAS,EAAE,IAFW;AAGtBC,YAAAA,MAAM,EAAE,IAHc;AAItBC,YAAAA,OAAO,EAAE2B,QAAQ,CAAC,CAAD,CAJK;AAKtB1B,YAAAA,IAAI,EAAEA,IALgB;AAMtBL,YAAAA,QAAQ,EAAE,IAAIK,IAAI,CAACgC,GAAL,CAASC,QAAb,CACRX,aAAa,CAACY,GADN,EAERZ,aAAa,CAACrB,OAFN,CANY;AAUtBC,YAAAA,YAAY,EAAEoB;AAVQ,WAAhB,CAAD,CAAP;AAYD,SAdD,MAcO;AACLP,UAAAA,OAAO,CAAC,OAAO,EACb,GAAGnB,gBADU;AAEbE,YAAAA,MAAM,EAAG,qBAAoBwB,aAAa,CAACa,KAAM;AAFpC,WAAP,CAAD,CAAP;AAID;AACF,OA3BD,CA2BE,OAAOC,GAAP,EAAY;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACC,OAAhB;AACAtB,QAAAA,OAAO,CAAC,OAAO,EACb,GAAGnB;AADU,SAAP,CAAD,CAAP;AAGD;AACF,KAlCD,MAkCO;AACLmB,MAAAA,OAAO,CAAC,OAAO,EACb,GAAGnB,gBADU;AAEbE,QAAAA,MAAM,EAAE;AAFK,OAAP,CAAD,CAAP;AAID;AACF,GAzCD;;AA2CA,QAAMwC,aAAa,GAAG,MAAM;AAC1B,QAAIf,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,iBAAnB,EAAsC,MAAM;AAC1ChB,QAAAA,MAAM,CAACiB,QAAP,CAAgBC,MAAhB;AACD,OAFD;AAGAlB,MAAAA,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,cAAnB,EAAmC,MAAM;AACvChB,QAAAA,MAAM,CAACiB,QAAP,CAAgBC,MAAhB;AACD,OAFD;AAGD;AACF,GATD;;AAWA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG;AACbC,MAAAA,EAAE,EAAE9B,IAAI,CAACZ,YAAL,CAAkBD,OADT;AAEb4C,MAAAA,IAAI,EAAE/B,IAAI,CAACf,OAFE;AAGb+C,MAAAA,IAAI,EAAEhC,IAAI,CAACnB,QAAL,CAAcoD,OAAd,CAAsBC,WAAtB,GAAoCC,SAApC;AAHO,KAAf;;AAKA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM3B,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,QAAAA,MAAM,EAAE,UADmC;AAE3Ce,QAAAA,MAAM,EAAE,CAACA,MAAD;AAFmC,OAAxB,CAArB;AAIAzB,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACd,IAAL,CAAUmD,KAAV,CAAgBC,iBAAhB,CAAkCF,MAAlC,CAAZ;AACAjC,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BxB,QAAAA,MAAM,EAAEO,IAAI,CAACd,IAAL,CAAUmD,KAAV,CAAgBC,iBAAhB,CAAkCF,MAAlC;AAFkB,OAAhB,CAAD,CAAX;AAID,KAVD,CAUE,OAAOd,GAAP,EAAY;AACZnB,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BxB,QAAAA,MAAM,EAAE;AAFkB,OAAhB,CAAD,CAAX;AAID;AACF,GAtBD;;AAwBA,QAAM8C,OAAO,GAAG,YAAY;AAC1B,UAAMV,MAAM,GAAG;AACbC,MAAAA,EAAE,EAAE9B,IAAI,CAACZ,YAAL,CAAkBD,OADT;AAEb4C,MAAAA,IAAI,EAAE/B,IAAI,CAACf,OAFE;AAGb+C,MAAAA,IAAI,EAAEhC,IAAI,CAACnB,QAAL,CAAcoD,OAAd,CAAsBvC,IAAtB,GAA6ByC,SAA7B;AAHO,KAAf;;AAKA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM3B,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,QAAAA,MAAM,EAAE,UADmC;AAE3Ce,QAAAA,MAAM,EAAE,CAACA,MAAD;AAFmC,OAAxB,CAArB;AAIAzB,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACd,IAAL,CAAUmD,KAAV,CAAgBC,iBAAhB,CAAkCF,MAAlC,CAAZ;AACAjC,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BvB,QAAAA,IAAI,EAAEM,IAAI,CAACd,IAAL,CAAUmD,KAAV,CAAgBC,iBAAhB,CAAkCF,MAAlC;AAFoB,OAAhB,CAAD,CAAX;AAID,KAVD,CAUE,OAAOd,GAAP,EAAY;AACZnB,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BvB,QAAAA,IAAI,EAAE;AAFoB,OAAhB,CAAD,CAAX;AAID;AACF,GAtBD;;AAwBA,QAAM8C,IAAI,GAAG,YAAY;AACvB,UAAMX,MAAM,GAAG;AACbC,MAAAA,EAAE,EAAE9B,IAAI,CAACZ,YAAL,CAAkBD,OADT;AAEb4C,MAAAA,IAAI,EAAE/B,IAAI,CAACf,OAFE;AAGbwD,MAAAA,KAAK,EAAEC,MAAM,CACX1C,IAAI,CAACd,IAAL,CAAUmD,KAAV,CAAgBM,KAAhB,CAAsBC,MAAM,CAAC1C,QAAQ,CAACR,IAAV,CAAN,GAAwBQ,QAAQ,CAACV,MAAvD,CADW,CAHA;AAMbwC,MAAAA,IAAI,EAAEhC,IAAI,CAACnB,QAAL,CAAcoD,OAAd,CACHO,IADG,CACExC,IAAI,CAACf,OADP,EACgBiB,QAAQ,CAACV,MADzB,EAEH2C,SAFG;AANO,KAAf;;AAUA,QAAI;AACFhC,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B3B,QAAAA,OAAO,EAAE,IAFiB;AAG1BN,QAAAA,MAAM,EAAG,WAAUkB,QAAQ,CAACV,MAAO;AAHT,OAAhB,CAAD,CAAX;AAKA,YAAMqD,MAAM,GAAG,MAAMpC,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,QAAAA,MAAM,EAAE,qBADmC;AAE3Ce,QAAAA,MAAM,EAAE,CAACA,MAAD;AAFmC,OAAxB,CAArB;AAIA1B,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B3B,QAAAA,OAAO,EAAE,KAFiB;AAG1BN,QAAAA,MAAM,EACJ;AAJwB,OAAhB,CAAD,CAAX;AAMA4C,MAAAA,SAAS;AACV,KAjBD,CAiBE,OAAON,GAAP,EAAY;AACZnB,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B3B,QAAAA,OAAO,EAAE,KAFiB;AAG1BN,QAAAA,MAAM,EAAEsC,GAAG,CAACC;AAHc,OAAhB,CAAD,CAAX;AAKD;AACF,GAnCD;;AAqCA,QAAMuB,YAAY,GAAIC,SAAD,IAAe;AAClC,QAAIA,SAAS,IAAI,EAAb,IAAmBA,SAAS,IAAI,CAApC,EAAuC;AACrC5C,MAAAA,WAAW,CAAEc,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BzB,QAAAA,MAAM,EAAEuD;AAFkB,OAAhB,CAAD,CAAX;AAID;AACF,GAPD;;AASA,QAAMC,iBAAiB,GAAIxC,aAAD,IAAmB;AAC3CF,IAAAA,IAAI,CAAC,qBAAD,EAAwBE,aAAxB,CAAJ;AACD,GAFD;;AAIA9B,EAAAA,SAAS,CAAC,MAAM;AACdsE,IAAAA,iBAAiB,CAACnE,QAAD,CAAjB;AACA2C,IAAAA,aAAa;AACd,GAHQ,EAGN,EAHM,CAAT;AAKA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,IAAI,CAACjB,SAAT,EAAoB;AAClB6C,MAAAA,SAAS;AACTW,MAAAA,OAAO;AACR;AACF,GALQ,EAKN,CAACvC,IAAI,CAACjB,SAAN,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BAAkB;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEGmB,QAAQ,CAACT,MAAT,GAAkBZ,QAAQ,CAACiB,YAA3B,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLmD,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,cAAc,EAAE,QAFX;AAGLC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA,gCAOE;AACE,UAAA,QAAQ,EAAE,CAACnD,IAAI,CAACjB,SAAN,IAAmBmB,QAAQ,CAACR,IAAT,IAAiB,GADhD;AAEE,UAAA,SAAS,EAAC,mCAFZ;AAGE,UAAA,OAAO,EAAE,MAAMoD,YAAY,CAAC5C,QAAQ,CAACV,MAAT,GAAkB,CAAnB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE;AAAK,UAAA,KAAK,EAAE;AAAE4D,YAAAA,KAAK,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AACE,UAAA,QAAQ,EAAE,CAACpD,IAAI,CAACjB,SAAN,IAAmBmB,QAAQ,CAACR,IAAT,IAAiB,GADhD;AAEE,UAAA,SAAS,EAAC,8CAFZ;AAGE,UAAA,OAAO,EAAE,MAAM8C,IAAI,EAHrB;AAAA,8BAKQtC,QAAQ,CAACV,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAsBE;AAAK,UAAA,KAAK,EAAE;AAAE4D,YAAAA,KAAK,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuBE;AACE,UAAA,QAAQ,EAAE,CAACpD,IAAI,CAACjB,SAAN,IAAmBmB,QAAQ,CAACR,IAAT,IAAiB,GADhD;AAEE,UAAA,SAAS,EAAC,mCAFZ;AAGE,UAAA,OAAO,EAAE,MAAMoD,YAAY,CAAC5C,QAAQ,CAACV,MAAT,GAAkB,CAAnB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAgCGQ,IAAI,CAACjB,SAAL,gBACC;AAAK,QAAA,KAAK,EAAE;AAAEkE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,gCACE;AAAG,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE,mBAAT;AAA8BC,YAAAA,SAAS,EAAE;AAAzC,WAAV;AAAA,qBACG,cAAAtD,IAAI,CAACd,IAAL,wDAAWmD,KAAX,CAAiBkB,OAAjB,CAAyBrD,QAAQ,CAACR,IAAlC,EAAwC,OAAxC,KACCQ,QAAQ,CAACV,MAFb,EAEqB,GAFrB,EAGGX,QAAQ,CAAC2E,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,mBAAT;AAA8BC,YAAAA,SAAS,EAAE;AAAzC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAK,UAAA,KAAK,EAAE;AAAEF,YAAAA,KAAK,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,mBAAT;AAA8BC,YAAAA,SAAS,EAAE;AAAzC,WAAV;AAAA,qBACGpD,QAAQ,CAACT,MADZ,OACqBZ,QAAQ,CAACiB,YAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAgBG,IAhDN,EAiDGI,QAAQ,CAAClB,MAAT,gBACC;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BkB,QAAQ,CAAClB;AAApC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAnDN,EAoDGgB,IAAI,CAAChB,MAAL,gBACC;AAAG,QAAA,SAAS,EAAC,YAAb;AAA0B,QAAA,KAAK,EAAE;AAAEqE,UAAAA,KAAK,EAAE;AAAT,SAAjC;AAAA,kBACGrD,IAAI,CAAChB;AADR;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAxDN;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA4DC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAG,QAAA,KAAK,EAAE;AAAEqE,UAAAA,KAAK,EAAE,mBAAT;AAA8BC,UAAAA,SAAS,EAAE;AAAzC,SAAV;AAAA,mBACGpD,QAAQ,CAACT,MADZ,OACqBZ,QAAQ,CAACiB,YAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,wEACoDjB,QAAQ,CAACU,IAD7D,EACmE,GADnE,2CAE0B;AAAG,UAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9DJ,eAwEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,wDADZ;AAEE,QAAA,KAAK,EAAE;AACLkE,UAAAA,eAAe,EAAEzD,IAAI,CAACjB,SAAL,GACb,gBADa,GAEb;AAHC,SAFT;AAOE,QAAA,OAAO,EAAE,MAAMiE,iBAAiB,CAACnE,QAAD,CAPlC;AAAA,kBASGmB,IAAI,CAACf,OAAL,GAAe,WAAf,GAA6B;AAThC;AAAA;AAAA;AAAA;AAAA,cADF,EAYGe,IAAI,CAACjB,SAAL,gBACC;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBACG2D,MAAM,CAAC1C,IAAI,CAACf,OAAN,CAAN,CAAqByE,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,IACC,KADD,GAEChB,MAAM,CAAC1C,IAAI,CAACf,OAAN,CAAN,CAAqByE,SAArB,CAA+B,EAA/B;AAHJ;AAAA;AAAA;AAAA;AAAA,cADD,GAMG,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,YAxEF,eA4FE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLC,QAAAA,IAAI,EAAE,CAAC;AAHF,OADT;AAME,MAAA,SAAS,EAAC,KANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,IAAI,EAAC,iFARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5FF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2GD;;GArRQ9D,M;;KAAAA,M;AAuRT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contract from \"../contracts/contract.json\";\n\nconst initialInfoState = {\n  connected: false,\n  status: null,\n  account: null,\n  web3: null,\n  contract: null,\n  address: null,\n  contractJSON: null,\n};\n\nconst initialMintState = {\n  loading: false,\n  status: `Connect your wallet and Mint your ${contract.name}`,\n  amount: 1,\n  supply: \"0\",\n  cost: \"0\",\n};\n\ndocument.getElementById(\"minted\").innerHTML = contract.total_supply;\n\nfunction Minter() {\n  const [info, setInfo] = useState(initialInfoState);\n  const [mintInfo, setMintInfo] = useState(initialMintState);\n\n  console.log(info);\n\n  const init = async (_request, _contractJSON) => {\n    if (window.ethereum.isMetaMask) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: _request,\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == _contractJSON.chain_id) {\n          let web3 = new Web3(window.ethereum);\n          setInfo((prevState) => ({\n            ...prevState,\n            connected: true,\n            status: null,\n            account: accounts[0],\n            web3: web3,\n            contract: new web3.eth.Contract(\n              _contractJSON.abi,\n              _contractJSON.address\n            ),\n            contractJSON: _contractJSON,\n          }));\n        } else {\n          setInfo(() => ({\n            ...initialInfoState,\n            status: `Change network to ${_contractJSON.chain}.`,\n          }));\n        }\n      } catch (err) {\n        console.log(err.message);\n        setInfo(() => ({\n          ...initialInfoState,\n        }));\n      }\n    } else {\n      setInfo(() => ({\n        ...initialInfoState,\n        status: \"Please install metamask.\",\n      }));\n    }\n  };\n\n  const initListeners = () => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const getSupply = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.totalSupply().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: 0,\n      }));\n    }\n  };\n\n  const getCost = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.cost().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: \"0\",\n      }));\n    }\n  };\n\n  const mint = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      value: String(\n        info.web3.utils.toHex(Number(mintInfo.cost) * mintInfo.amount)\n      ),\n      data: info.contract.methods\n        .mint(info.account, mintInfo.amount)\n        .encodeABI(),\n    };\n    try {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: true,\n        status: `Minting ${mintInfo.amount} CryptoCovid ...`,\n      }));\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [params],\n      });\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status:\n          \"Great! Be patient, Your CryptoCovids will show up in our Gallery and marketplaces such as Opensea, once the transaction is successful. You can check your transaction on your MetaMask.\",\n      }));\n      getSupply();\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status: err.message,\n      }));\n    }\n  };\n\n  const updateAmount = (newAmount) => {\n    if (newAmount <= 20 && newAmount >= 1) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        amount: newAmount,\n      }));\n    }\n  };\n\n  const connectToContract = (_contractJSON) => {\n    init(\"eth_requestAccounts\", _contractJSON);\n  };\n\n  useEffect(() => {\n    connectToContract(contract);\n    initListeners();\n  }, []);\n\n  useEffect(() => {\n    if (info.connected) {\n      getSupply();\n      getCost();\n    }\n  }, [info.connected]);\n\n  return (\n      <div className=\"card icon-box2\">\n          <div class=\"icon\"><i class=\"bx bxl-creative-commons\"></i></div>\n        {mintInfo.supply < contract.total_supply ? (\n          <div className=\"card_body\">\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button btn btn-outline-dark\"\n                onClick={() => updateAmount(mintInfo.amount - 1)}\n              >\n                -\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"button gap-6 col-10  btn btn-outline-primary\"\n                onClick={() => mint()}\n              >\n                Mint {mintInfo.amount}\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button btn btn-outline-dark\"\n                onClick={() => updateAmount(mintInfo.amount + 1)}\n              >\n                +\n              </button>\n            </div>\n            {info.connected ? (\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {info.web3?.utils.fromWei(mintInfo.cost, \"ether\") *\n                    mintInfo.amount}{\" \"}\n                  {contract.chain_symbol}\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  |\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {mintInfo.supply}/{contract.total_supply}\n                </p>\n              </div>\n            ) : null}\n            {mintInfo.status ? (\n              <p className=\"statusText\">{mintInfo.status}</p>\n            ) : null}\n            {info.status ? (\n              <p className=\"statusText\" style={{ color: \"var(--error)\" }}>\n                {info.status}\n              </p>\n            ) : null}\n          </div>\n        ) : (\n          <div className=\"card_body\">\n            <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n              {mintInfo.supply}/{contract.total_supply}\n            </p>\n            <p className=\"statusText\">\n              We've sold out! .You can still buy and trade the {contract.name}{\" \"}\n              on marketplaces such as <a href=\"https://opensea.io\">Opensea</a>.\n            </p>\n          </div>\n        )}\n        <div className=\"card_footer\">\n          <button\n            className=\"button button gap-2 col-10  btn btn-btn-outline-danger\"\n            style={{\n              backgroundColor: info.connected\n                ? \"var(--success)\"\n                : \"var(--warning)\",\n            }}\n            onClick={() => connectToContract(contract)}\n          >\n            {info.account ? \"Connected\" : \"Connect Wallet\"}\n          </button>\n          {info.connected ? (\n            <span className=\"accountText\">\n              {String(info.account).substring(0, 6) +\n                \"...\" +\n                String(info.account).substring(38)}\n            </span>\n          ) : null}\n        </div>\n        <a\n          style={{\n            position: \"absolute\",\n            bottom: 55,\n            left: -75,\n          }}\n          className=\"_90\"\n          target=\"_blank\"\n          href=\"https://rinkeby.etherscan.io/address/0x72c336b7170db42183c15629e0d9880e7d62bc42\"\n        >\n          View Contract\n        </a>\n      </div>\n  );\n}\n\nexport default Minter;\n"]},"metadata":{},"sourceType":"module"}