{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/WorkSpace/CryptoCovids Minter/src/components/Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contract from \"../contracts/contract.json\";\nimport Hero from \"../assets/hero.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialInfoState = {\n  connected: false,\n  status: null,\n  account: null,\n  web3: null,\n  contract: null,\n  address: null,\n  contractJSON: null\n};\nconst initialMintState = {\n  loading: false,\n  status: `Mint your ${contract.name}`,\n  amount: 1,\n  supply: \"0\",\n  cost: \"0\"\n};\n\nfunction Minter() {\n  _s();\n\n  var _info$web;\n\n  const [info, setInfo] = useState(initialInfoState);\n  const [mintInfo, setMintInfo] = useState(initialMintState);\n  console.log(info);\n\n  const init = async (_request, _contractJSON) => {\n    if (window.ethereum.isMetaMask) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: _request\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n\n        if (networkId == _contractJSON.chain_id) {\n          let web3 = new Web3(window.ethereum);\n          setInfo(prevState => ({ ...prevState,\n            connected: true,\n            status: null,\n            account: accounts[0],\n            web3: web3,\n            contract: new web3.eth.Contract(_contractJSON.abi, _contractJSON.address),\n            contractJSON: _contractJSON\n          }));\n        } else {\n          setInfo(() => ({ ...initialInfoState,\n            status: `Change network to ${_contractJSON.chain}.`\n          }));\n        }\n      } catch (err) {\n        console.log(err.message);\n        setInfo(() => ({ ...initialInfoState\n        }));\n      }\n    } else {\n      setInfo(() => ({ ...initialInfoState,\n        status: \"Please install metamask.\"\n      }));\n    }\n  };\n\n  const initListeners = () => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const getSupply = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.totalSupply().encodeABI()\n    };\n\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params]\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo(prevState => ({ ...prevState,\n        supply: info.web3.utils.hexToNumberString(result)\n      }));\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        supply: 0\n      }));\n    }\n  };\n\n  const getCost = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.cost().encodeABI()\n    };\n\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params]\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo(prevState => ({ ...prevState,\n        cost: info.web3.utils.hexToNumberString(result)\n      }));\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        cost: \"0\"\n      }));\n    }\n  };\n\n  const mint = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      value: String(info.web3.utils.toHex(Number(mintInfo.cost) * mintInfo.amount)),\n      data: info.contract.methods.mint(info.account, mintInfo.amount).encodeABI()\n    };\n\n    try {\n      setMintInfo(prevState => ({ ...prevState,\n        loading: true,\n        status: `Minting ${mintInfo.amount}...`\n      }));\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [params]\n      });\n      setMintInfo(prevState => ({ ...prevState,\n        loading: false,\n        status: \"Nice! Your NFT will show up on Opensea, once the transaction is successful.\"\n      }));\n      getSupply();\n    } catch (err) {\n      setMintInfo(prevState => ({ ...prevState,\n        loading: false,\n        status: err.message\n      }));\n    }\n  };\n\n  const updateAmount = newAmount => {\n    if (newAmount <= 5 && newAmount >= 1) {\n      setMintInfo(prevState => ({ ...prevState,\n        amount: newAmount\n      }));\n    }\n  };\n\n  const connectToContract = _contractJSON => {\n    init(\"eth_requestAccounts\", _contractJSON);\n  };\n\n  useEffect(() => {\n    connectToContract(contract);\n    initListeners();\n  }, []);\n  useEffect(() => {\n    if (info.connected) {\n      getSupply();\n      getCost();\n    }\n  }, [info.connected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_header colorGradient\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card_header_image ns\",\n          alt: \"banner\",\n          src: Hero\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), mintInfo.supply < contract.total_supply ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !info.connected || mintInfo.cost == \"0\",\n            className: \"small_button\",\n            onClick: () => updateAmount(mintInfo.amount - 1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !info.connected || mintInfo.cost == \"0\",\n            className: \"button\",\n            onClick: () => mint(),\n            children: [\"Mint \", mintInfo.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !info.connected || mintInfo.cost == \"0\",\n            className: \"small_button\",\n            onClick: () => updateAmount(mintInfo.amount + 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), info.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"var(--statusText)\",\n              textAlign: \"center\"\n            },\n            children: [((_info$web = info.web3) === null || _info$web === void 0 ? void 0 : _info$web.utils.fromWei(mintInfo.cost, \"ether\")) * mintInfo.amount, \" \", contract.chain_symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"var(--statusText)\",\n              textAlign: \"center\"\n            },\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"var(--statusText)\",\n              textAlign: \"center\"\n            },\n            children: [mintInfo.supply, \"/\", contract.total_supply]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this) : null, mintInfo.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"statusText\",\n          children: mintInfo.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this) : null, info.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"statusText\",\n          style: {\n            color: \"var(--error)\"\n          },\n          children: info.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"var(--statusText)\",\n            textAlign: \"center\"\n          },\n          children: [mintInfo.supply, \"/\", contract.total_supply]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"statusText\",\n          children: [\"We've sold out! .You can still buy and trade the \", contract.name, \" \", \"on marketplaces such as Opensea.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_footer colorGradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          style: {\n            backgroundColor: info.connected ? \"var(--success)\" : \"var(--warning)\"\n          },\n          onClick: () => connectToContract(contract),\n          children: info.account ? \"Connected\" : \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), info.connected ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accountText\",\n          children: String(info.account).substring(0, 6) + \"...\" + String(info.account).substring(38)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          position: \"absolute\",\n          bottom: 55,\n          left: -75\n        },\n        className: \"_90\",\n        target: \"_blank\",\n        href: \"https://polygonscan.com/token/0x827acb09a2dc20e39c9aad7f7190d9bc53534192\",\n        children: \"View Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Minter, \"mIzeChdqMe5EBrlIjA8UhRd3cSE=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["/Users/Neo/WorkSpace/CryptoCovids Minter/src/components/Minter.js"],"names":["useEffect","useState","Web3","contract","Hero","initialInfoState","connected","status","account","web3","address","contractJSON","initialMintState","loading","name","amount","supply","cost","Minter","info","setInfo","mintInfo","setMintInfo","console","log","init","_request","_contractJSON","window","ethereum","isMetaMask","accounts","request","method","networkId","chain_id","prevState","eth","Contract","abi","chain","err","message","initListeners","on","location","reload","getSupply","params","to","from","data","methods","totalSupply","encodeABI","result","utils","hexToNumberString","getCost","mint","value","String","toHex","Number","txHash","updateAmount","newAmount","connectToContract","total_supply","display","justifyContent","alignItems","width","color","textAlign","fromWei","chain_symbol","backgroundColor","substring","position","bottom","left"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contract from \"../contracts/contract.json\";\nimport Hero from \"../assets/hero.png\";\n\nconst initialInfoState = {\n  connected: false,\n  status: null,\n  account: null,\n  web3: null,\n  contract: null,\n  address: null,\n  contractJSON: null,\n};\n\nconst initialMintState = {\n  loading: false,\n  status: `Mint your ${contract.name}`,\n  amount: 1,\n  supply: \"0\",\n  cost: \"0\",\n};\n\nfunction Minter() {\n  const [info, setInfo] = useState(initialInfoState);\n  const [mintInfo, setMintInfo] = useState(initialMintState);\n\n  console.log(info);\n\n  const init = async (_request, _contractJSON) => {\n    if (window.ethereum.isMetaMask) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: _request,\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == _contractJSON.chain_id) {\n          let web3 = new Web3(window.ethereum);\n          setInfo((prevState) => ({\n            ...prevState,\n            connected: true,\n            status: null,\n            account: accounts[0],\n            web3: web3,\n            contract: new web3.eth.Contract(\n              _contractJSON.abi,\n              _contractJSON.address\n            ),\n            contractJSON: _contractJSON,\n          }));\n        } else {\n          setInfo(() => ({\n            ...initialInfoState,\n            status: `Change network to ${_contractJSON.chain}.`,\n          }));\n        }\n      } catch (err) {\n        console.log(err.message);\n        setInfo(() => ({\n          ...initialInfoState,\n        }));\n      }\n    } else {\n      setInfo(() => ({\n        ...initialInfoState,\n        status: \"Please install metamask.\",\n      }));\n    }\n  };\n\n  const initListeners = () => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const getSupply = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.totalSupply().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        supply: 0,\n      }));\n    }\n  };\n\n  const getCost = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      data: info.contract.methods.cost().encodeABI(),\n    };\n    try {\n      const result = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [params],\n      });\n      console.log(info.web3.utils.hexToNumberString(result));\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: info.web3.utils.hexToNumberString(result),\n      }));\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        cost: \"0\",\n      }));\n    }\n  };\n\n  const mint = async () => {\n    const params = {\n      to: info.contractJSON.address,\n      from: info.account,\n      value: String(\n        info.web3.utils.toHex(Number(mintInfo.cost) * mintInfo.amount)\n      ),\n      data: info.contract.methods\n        .mint(info.account, mintInfo.amount)\n        .encodeABI(),\n    };\n    try {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: true,\n        status: `Minting ${mintInfo.amount}...`,\n      }));\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [params],\n      });\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status:\n          \"Nice! Your NFT will show up on Opensea, once the transaction is successful.\",\n      }));\n      getSupply();\n    } catch (err) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        loading: false,\n        status: err.message,\n      }));\n    }\n  };\n\n  const updateAmount = (newAmount) => {\n    if (newAmount <= 5 && newAmount >= 1) {\n      setMintInfo((prevState) => ({\n        ...prevState,\n        amount: newAmount,\n      }));\n    }\n  };\n\n  const connectToContract = (_contractJSON) => {\n    init(\"eth_requestAccounts\", _contractJSON);\n  };\n\n  useEffect(() => {\n    connectToContract(contract);\n    initListeners();\n  }, []);\n\n  useEffect(() => {\n    if (info.connected) {\n      getSupply();\n      getCost();\n    }\n  }, [info.connected]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"card\">\n        <div className=\"card_header colorGradient\">\n          <img className=\"card_header_image ns\" alt={\"banner\"} src={Hero} />\n        </div>\n        {mintInfo.supply < contract.total_supply ? (\n          <div className=\"card_body\">\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button\"\n                onClick={() => updateAmount(mintInfo.amount - 1)}\n              >\n                -\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"button\"\n                onClick={() => mint()}\n              >\n                Mint {mintInfo.amount}\n              </button>\n              <div style={{ width: 10 }}></div>\n              <button\n                disabled={!info.connected || mintInfo.cost == \"0\"}\n                className=\"small_button\"\n                onClick={() => updateAmount(mintInfo.amount + 1)}\n              >\n                +\n              </button>\n            </div>\n            {info.connected ? (\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {info.web3?.utils.fromWei(mintInfo.cost, \"ether\") *\n                    mintInfo.amount}{\" \"}\n                  {contract.chain_symbol}\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  |\n                </p>\n                <div style={{ width: 20 }}></div>\n                <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n                  {mintInfo.supply}/{contract.total_supply}\n                </p>\n              </div>\n            ) : null}\n            {mintInfo.status ? (\n              <p className=\"statusText\">{mintInfo.status}</p>\n            ) : null}\n            {info.status ? (\n              <p className=\"statusText\" style={{ color: \"var(--error)\" }}>\n                {info.status}\n              </p>\n            ) : null}\n          </div>\n        ) : (\n          <div className=\"card_body\">\n            <p style={{ color: \"var(--statusText)\", textAlign: \"center\" }}>\n              {mintInfo.supply}/{contract.total_supply}\n            </p>\n            <p className=\"statusText\">\n              We've sold out! .You can still buy and trade the {contract.name}{\" \"}\n              on marketplaces such as Opensea.\n            </p>\n          </div>\n        )}\n        <div className=\"card_footer colorGradient\">\n          <button\n            className=\"button\"\n            style={{\n              backgroundColor: info.connected\n                ? \"var(--success)\"\n                : \"var(--warning)\",\n            }}\n            onClick={() => connectToContract(contract)}\n          >\n            {info.account ? \"Connected\" : \"Connect Wallet\"}\n          </button>\n          {info.connected ? (\n            <span className=\"accountText\">\n              {String(info.account).substring(0, 6) +\n                \"...\" +\n                String(info.account).substring(38)}\n            </span>\n          ) : null}\n        </div>\n        <a\n          style={{\n            position: \"absolute\",\n            bottom: 55,\n            left: -75,\n          }}\n          className=\"_90\"\n          target=\"_blank\"\n          href=\"https://polygonscan.com/token/0x827acb09a2dc20e39c9aad7f7190d9bc53534192\"\n        >\n          View Contract\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Minter;\n"]},"metadata":{},"sourceType":"module"}